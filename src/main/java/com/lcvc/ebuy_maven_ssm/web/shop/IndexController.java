package com.lcvc.ebuy_maven_ssm.web.shop;import com.lcvc.ebuy_maven_ssm.model.Admin;import com.lcvc.ebuy_maven_ssm.model.Customer;import com.lcvc.ebuy_maven_ssm.service.CustomerService;import com.lcvc.ebuy_maven_ssm.service.ProductService;import com.lcvc.ebuy_maven_ssm.service.ProductTypeService;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import javax.annotation.Resource;import javax.servlet.http.HttpSession;import java.util.HashMap;import java.util.Map;@Controllerpublic class IndexController {	@Resource	private ProductService productService;	@Resource	private ProductTypeService productTypeService;	@Resource	private CustomerService customerService;	@RequestMapping(value = "shop/toindex", method = RequestMethod.GET)	public String index(Model model) {		model.addAttribute("productTypes", productTypeService.getProductTypeList());//当前页显示的记录集合		model.addAttribute("newProducts", productService.getNewTopProductList(8));//当前页显示的记录集合		model.addAttribute("hotProduct",productService.getHotProductList(4));//热门订单的显示数量		model.addAttribute("timeProduct",productService.getTimeProductList(4));//热门订单的显示数量		return "/jsp/shop/index.jsp";	}	//跳转到今日新品更多页面	@RequestMapping(value = "shop/toshoplists", method = RequestMethod.GET)	public String toProduct(Model model,Integer page) {		if (page==null){//如果page为null，默认为第一页		page=1;	}else {		if (page<1){			page=1;		}	}		model.addAttribute("list", productService.getProductList(page));//当前页显示的记录集合		model.addAttribute("page",page);//当前页		model.addAttribute("maxPage",productService.maxPage());//最大也		model.addAttribute("newProducts", productService.getNewTopProductList(8));//当前页显示的记录集合		return "jsp/shop/shoplists.jsp";	}	//跳转到产品详情页面	@RequestMapping(value = "shop/toshopdetial", method = RequestMethod.GET)	public String toshopdetial(Model model, Integer id) {		model.addAttribute("product",productService.getProduct(id));		return "jsp/shop/shopdetial.jsp";	}	//跳转到购物车页面	@RequestMapping(value = "shop/toshopcart", method = RequestMethod.GET)	public String toshopcart(Model model, Integer id) {		//model.addAttribute("product",productService.getProduct(id));		return "jsp/shop/shopcart.jsp";	}	/*//跳转到登录页面	@RequestMapping(value = "shop/tosignin", method = RequestMethod.GET)	public String tosignin() {		return "jsp/shop/signin.jsp";	}	//登录	@RequestMapping(value = "shop/dosignin", method = RequestMethod.POST)	public String dosignin(String username, String password, Model model, HttpSession session){		Customer customer=customerService.login(username,password);		if (customer != null){			session.setAttribute("customer",customer);			return "jsp/shop/index.jsp";		}		model.addAttribute("myMessage","账户名或者密码错误，请重新输入!");		return "jsp/shop/signin.jsp";	}*//*	 * 显示登录页面，该登录页面是使用Ajax进行登录	 */	@RequestMapping(value = "shop/tosignin", method = RequestMethod.GET)	public String tosignin() {		return "jsp/shop/signin.jsp";	}	/*	 * 用于判断登录	 */	@ResponseBody	@RequestMapping(value = "shop/dosignin", method = RequestMethod.POST)	public Map<String,Object> dosignin(String username, String password, HttpSession session) {		Map<String,Object> map=new HashMap<String,Object>();		Customer customer=customerService.login(username, password);		if(customer!=null){			session.setAttribute("customer", customer);			map.put("status",1);		}else{			map.put("status",0);			map.put("myMessage", "登录失败:密码错误");		}		return map;	}	//跳转到产品详情页面	@RequestMapping(value = "shop/toshoptypelists", method = RequestMethod.GET)	public String toshoptypelists(Model model, Integer id) {		model.addAttribute("getProductTypeShoplist",productService.getProductTypeShoplistList(id));		return "jsp/shop/shoptypelists.jsp";	}	//产品分类按价格排序	@RequestMapping(value = "shop/toshoptypepirce", method = RequestMethod.GET)	public String toshoptypepice(Model model, Integer id) {		model.addAttribute("getProductShopPirceList",productService.getProductShopPirceList(id));		return "jsp/shop/shoptypeprice.jsp";	}}